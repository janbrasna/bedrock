# Workflows that run integration tests on live sites

name: Integration tests
run-name: Integration tests for ${{ inputs.git_sha || github.sha }}
on:
  push:
  workflow_dispatch:
    inputs:
      branch:
        description: The branch of mozilla/bedrock we're testing against - main|stage|prod|run-integration-tests
        required: false #true
      git_sha:
        description: The git SHA just deployed to the service we want to test
        required: false #true
      mozorg_service_hostname:
        description: The root URL of the Mozorg service to run tests against
        required: false #true
jobs:
  integration-tests:
    if: always()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - LABEL: fake-saucelabs
            MARK_EXPRESSION: smoke
            BROWSER_NAME: chrome
            DRIVER: Remote
          - LABEL: test-headless
            MARK_EXPRESSION: headless
            DRIVER: ""
    env:
      BASE_URL: ${{ github.event.inputs.mozorg_service_hostname || 'https://dev.bedrock.nonprod.webservices.mozgcp.net' }}
      LABEL: ${{ matrix.LABEL }}
      MARK_EXPRESSION: ${{ matrix.MARK_EXPRESSION }}
      DRIVER: ${{ matrix.DRIVER }}
      BROWSER_NAME: ${{ matrix.BROWSER_NAME }}
      PLATFORM: ""
      PYTEST_PROCESSES: auto
      SAUCELABS_API_KEY: " "
      SAUCELABS_USERNAME: " "
      CI_JOB_ID: ${{ github.run_id }}

    steps:
      - name: Fetch codebase
        if: always()
        uses: actions/checkout@v4
      - name: Sets specific env vars IF we're on testing against dev/main only
        if: ${{ github.event.inputs.branch == 'main'}}
        run: |
          echo "BOUNCER_URL=https://bouncer-bouncer.stage.mozaws.net/" >> $GITHUB_ENV

      - name: Run functional integration tests
        if: always()
        run: ./bin/integration_tests/functional_tests.sh
        env:
          TEST_IMAGE: mozmeao/bedrock_test:latest # ${{ github.event.inputs.git_sha }}

      - name: Cleanup after functional integration tests
        if: always()
        run: ./bin/integration_tests/cleanup_after_functional_tests.sh

      - name: Store artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: results-${{github.run_id}}-${{matrix.label}}
          if-no-files-found: ignore  #Â this avoids a false "Warning" if there were no issues

  playwright-tests:
    if: always()
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_BASE_URL: ${{ github.event.inputs.mozorg_service_hostname || 'https://dev.bedrock.nonprod.webservices.mozgcp.net' }}
      CI: true
      CI_JOB_ID: ${{ github.run_id }}
      DRIVER: ""
      LABEL: playwright-tests
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Install dependencies
      run: cd tests/playwright && npm ci && npm run install-deps
    - name: Run Playwright tests
      run: cd tests/playwright && npm run integration-tests
